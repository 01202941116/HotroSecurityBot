import os
import re
from telegram.ext import Updater, MessageHandler, Filters

# ====== C·∫§U H√åNH ======
# Token bot Telegram ‚Äì b·∫°n c√≥ th·ªÉ l·∫•y t·ª´ bi·∫øn m√¥i tr∆∞·ªùng tr√™n Render
TOKEN = os.getenv("TELEGRAM_TOKEN", "").strip()
# N·∫øu ch·∫°y th·ª≠ local th√¨ c√≥ th·ªÉ g√°n tr·ª±c ti·∫øp token ƒë·ªÉ test:
if not TOKEN:
    TOKEN = "8360017614:AAfAdMj06cY9PyGYpHcL9vL03CM8rLbo2I"

# Danh s√°ch domain cho ph√©p (whitelist)
WHITELIST = [
    "youtube.com",
    "youtu.be",
    "duyenmy.vn"
]

# Danh s√°ch c·∫ßn ch·∫∑n (blacklist)
BLACKLIST_PATTERNS = [
    r"t\.me",        # ch·∫∑n link Telegram
    r"@\w+",         # ch·∫∑n @username
    r"sex",
    r"18\+",
    r"\.com"         # ch·∫∑n c√°c domain .com l·∫° (ngo√†i whitelist)
]

# ====== C√ÅC H√ÄM H·ªñ TR·ª¢ ======

def has_whitelisted_domain(text: str) -> bool:
    """Ki·ªÉm tra n·∫øu tin nh·∫Øn c√≥ ch·ª©a domain cho ph√©p"""
    if not text:
        return False
    text_l = text.lower()
    return any(d in text_l for d in WHITELIST)

def matches_blacklist(text: str) -> bool:
    """Ki·ªÉm tra n·∫øu tin nh·∫Øn kh·ªõp danh s√°ch c·∫ßn ch·∫∑n"""
    if not text:
        return False
    text_l = text.lower()
    return any(re.search(p, text_l) for p in BLACKLIST_PATTERNS)

def get_message_text(update):
    """L·∫•y text ho·∫∑c caption trong tin nh·∫Øn"""
    msg = update.message
    if not msg:
        return ""
    parts = []
    if msg.text:
        parts.append(msg.text)
    if msg.caption:
        parts.append(msg.caption)
    return "\n".join(parts).strip()

# ====== X·ª¨ L√ù CH√çNH ======

def delete_spam(update, context):
    try:
        msg = update.message
        if not msg:
            return
        text = get_message_text(update)
        if has_whitelisted_domain(text):
            return
        if matches_blacklist(text):
            context.bot.delete_message(chat_id=msg.chat_id, message_id=msg.message_id)
            print(f"üóë ƒê√£ x√≥a tin nh·∫Øn vi ph·∫°m: {text[:120]}")
    except Exception as e:
        print(f"L·ªói khi x√≥a tin nh·∫Øn: {e}")

def main():
    if not TOKEN:
        raise RuntimeError(
            "‚ö†Ô∏è Thi·∫øu TELEGRAM_TOKEN. H√£y v√†o Render ‚Üí Environment ‚Üí Add Variable: "
            "Key=TELEGRAM_TOKEN, Value=<token c·ªßa BotFather>"
        )

    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    # G·∫Øn b·ªô l·ªçc text, caption, media
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, delete_spam))
    dp.add_handler(MessageHandler(Filters.caption, delete_spam))
    dp.add_handler(MessageHandler(Filters.photo | Filters.video | Filters.document | Filters.animation, delete_spam))

    print("ü§ñ Bot ƒëang ch·∫°y‚Ä¶")
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
